---
# All tasks marked by tag 'updatecheck' will be used by callback plugin
# 'hostupgradeplugin' to retrieve information about packages which
# that tasks installs or updates. So if you want to add any specific task
# analazying packages to be updates/installed please tag it by 'updatecheck'
# tag.

- name: Install ovirt-host package if it isn't installed
  yum:
    name: ovirt-host
    state: latest
    update_cache: yes
    lock_timeout: 300
  tags:
    - updatecheck
    - skip_ansible_lint # E403

- name: Import oVirt host facts
  import_role:
    name: ovirt-host-deploy-facts
    tasks_from: host-os.yml

- name: Configure advanced virtualization
  import_tasks: advanced-virtualization.yml

# We need to check for updates after we enable new advanced virt module
- name: Check for updated packages
  import_role:
    name: ovirt-host-check-upgrade

- name: Prepare NGN host for upgrade
  file:
    path: /var/imgbased/.image-updated
    state: absent
  when: node_host|bool

- name: Upgrade packages
  yum:
    name: '*'
    state: latest
  register: updated_packages
  when: not node_host| bool
  tags:
    - skip_ansible_lint # E403

## Ignoring empty lines and the title "Obsoleting packages"
- name: Upgrade packages
  yum:
    name: "{{ item }}"
    state: latest
    lock_timeout: 300
    conf_file: /tmp/yum.conf
  loop: "{{ yum_result.split('\n') }}"
  tags:
  - updatecheck
  - skip_ansible_lint # E403
  register: updated_packages
  when: node_host| bool

- name: Check if image was updated
  set_fact:
    image_pkg_updated: "{{ yum_result is search('image-update') }}"
  when: node_host|bool

- name: Check if image-updated file exists
  stat:
    path: /var/imgbased/.image-updated
  register: image_updated_file
  when:
    - node_host|bool
    - image_pkg_updated|bool

- name: Verify image was updated successfully
  fail:
    msg: "Node image upgrade failed"
  when:
    - node_host|bool
    - image_pkg_updated|bool
    - not image_updated_file.stat.exists
    - host_deploy_cluster_version|float >= 4.4

- name: Configure LVM filter
  command: vdsm-tool config-lvm-filter -y
  register: lvm_filter_result
  when: el_ver|int >= 8
  ignore_errors: true

- name: Error configuring LVM filter
  debug:
    msg: "[ERROR] Cannot configure LVM filter on host, please run: vdsm-tool config-lvm-filter"
  when:
    - el_ver|int >= 8
    - lvm_filter_result.rc != 0
